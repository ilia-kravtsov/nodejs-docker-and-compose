version: '3.9'

services:
  # --------------------
  # Backend
  # --------------------
  backend:
    container_name: kupipodariday-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    ports:
      - "4000:3001"   # Внешний порт 4000 -> внутренний порт 3001 контейнера
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - kp-network

  # --------------------
  # Frontend
  # --------------------
  frontend:
    container_name: kupipodariday-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8081:80"     # Внешний порт 8081 -> Nginx порт 80
    depends_on:
      - backend
    networks:
      - kp-network

  # --------------------
  # Database
  # --------------------
  postgres:
    container_name: kupipodariday-db
    image: postgres:15-alpine
    env_file:
      - ./backend/.env  # Загружаю переменные Postgres из бэка
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - kp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U student -d kupipodariday"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
# --------------------
# Volumes
# --------------------
volumes:
  postgres-data:

# --------------------
# Networks
# --------------------
networks:
  kp-network:
    driver: bridge